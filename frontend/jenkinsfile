pipeline {
    agent any

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Clean and Install dependencies') {
            steps {
                dir('frontend') {
                    echo 'Cleaning node_modules...'
                    sh 'rm -rf node_modules'
                    echo 'Installing dependencies...'
                    sh 'npm install --legacy-peer-deps'
                }
            }
        }

        stage('SonarQube Analysis') { 
            steps { 
                script {   
                    def scannerHome = tool 'scanner' 
                    withSonarQubeEnv('SonarQube') {  // Remplace "SonarQube" si tu utilises un autre nom
                        dir('frontend') {  // Assurez-vous que vous êtes dans le bon dossier
                            sh 'pwd'  // Affiche le chemin actuel
                            sh 'ls -l'  // Liste les fichiers dans le dossier, pour vérifier sonar-project.properties
                            sh 'cat sonar-project.properties'  // Affiche le contenu du fichier
                            sh "${scannerHome}/bin/sonar-scanner"  // Lance SonarScanner
                        }
                    }
                }  
            }  
        }

        stage('Build Application') {
            steps {
                // Ajoutez ici la commande pour la construction de l'application
                echo 'Building the application...'
            }
        }

        stage('Deploy') {
            steps {
                // Ajoutez ici les étapes de déploiement
                echo 'Deploying the application...'
            }
        }
    }

    post {
        always {
            echo 'Pipeline terminé.'
        }
        failure {
            echo 'Le pipeline a échoué.'
        }
    }
}
